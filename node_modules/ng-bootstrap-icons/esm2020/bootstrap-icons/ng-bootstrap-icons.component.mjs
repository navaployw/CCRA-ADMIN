import { Component, Input, Inject, } from "@angular/core";
import { Icons } from "./icons.provider";
import { uppercamelcase } from "./utils";
import * as i0 from "@angular/core";
import * as i1 from "./icons.provider";
export class BootstrapIcons {
    constructor(elem, changeDetector, icons) {
        this.elem = elem;
        this.changeDetector = changeDetector;
        this.icons = icons;
    }
    ngOnChanges(changes) {
        // icons are provided as an array of objects because of "multi: true"
        const icons = Object.assign({}, ...this.icons);
        const svg = icons[uppercamelcase(changes.name.currentValue)] || "";
        if (!svg) {
            console.warn(`Icon not found: ${changes.name.currentValue}\n` +
                `Refer to documentation on https://github.com/biutas/ng-bootstrap-icons/issues`);
        }
        this.elem.nativeElement.innerHTML = svg;
        this.changeDetector.markForCheck();
    }
}
BootstrapIcons.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: BootstrapIcons, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: Icons }], target: i0.ɵɵFactoryTarget.Component });
BootstrapIcons.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.1.1", type: BootstrapIcons, selector: "bt-icon, bootstrap-icon, bi", inputs: { name: "name" }, usesOnChanges: true, ngImport: i0, template: "<ng-content></ng-content>\n", styles: [":host{display:flex;justify-content:center;align-items:center;fill:none;stroke-linecap:round;stroke-linejoin:round}:host svg{width:100%!important;height:100%!important}\n"] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.1.1", ngImport: i0, type: BootstrapIcons, decorators: [{
            type: Component,
            args: [{ selector: "bt-icon, bootstrap-icon, bi", template: "<ng-content></ng-content>\n", styles: [":host{display:flex;justify-content:center;align-items:center;fill:none;stroke-linecap:round;stroke-linejoin:round}:host svg{width:100%!important;height:100%!important}\n"] }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Icons, decorators: [{
                    type: Inject,
                    args: [Icons]
                }] }]; }, propDecorators: { name: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctYm9vdHN0cmFwLWljb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9saWIvYm9vdHN0cmFwLWljb25zL25nLWJvb3RzdHJhcC1pY29ucy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvbGliL2Jvb3RzdHJhcC1pY29ucy9uZy1ib290c3RyYXAtaWNvbnMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLFNBQVMsRUFFVCxLQUFLLEVBQ0wsTUFBTSxHQUlQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUN6QyxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sU0FBUyxDQUFDOzs7QUFRekMsTUFBTSxPQUFPLGNBQWM7SUFHekIsWUFDVSxJQUFnQixFQUNoQixjQUFpQyxFQUNsQixLQUFZO1FBRjNCLFNBQUksR0FBSixJQUFJLENBQVk7UUFDaEIsbUJBQWMsR0FBZCxjQUFjLENBQW1CO1FBQ2xCLFVBQUssR0FBTCxLQUFLLENBQU87SUFDbEMsQ0FBQztJQUVKLFdBQVcsQ0FBQyxPQUFzQjtRQUNoQyxxRUFBcUU7UUFDckUsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsR0FBSSxJQUFJLENBQUMsS0FBeUIsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sR0FBRyxHQUFHLEtBQUssQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUVuRSxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1IsT0FBTyxDQUFDLElBQUksQ0FDVixtQkFBbUIsT0FBTyxDQUFDLElBQUksQ0FBQyxZQUFZLElBQUk7Z0JBQzlDLCtFQUErRSxDQUNsRixDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxTQUFTLEdBQUcsR0FBRyxDQUFDO1FBQ3hDLElBQUksQ0FBQyxjQUFjLENBQUMsWUFBWSxFQUFFLENBQUM7SUFDckMsQ0FBQzs7MkdBdkJVLGNBQWMsNkVBTWYsS0FBSzsrRkFOSixjQUFjLGtIQ2xCM0IsNkJBQ0E7MkZEaUJhLGNBQWM7a0JBTjFCLFNBQVM7K0JBRUUsNkJBQTZCOzswQkFVcEMsTUFBTTsyQkFBQyxLQUFLOzRDQUxOLElBQUk7c0JBQVosS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgRWxlbWVudFJlZixcbiAgSW5wdXQsXG4gIEluamVjdCxcbiAgQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gIE9uQ2hhbmdlcyxcbiAgU2ltcGxlQ2hhbmdlcyxcbn0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEljb25zIH0gZnJvbSBcIi4vaWNvbnMucHJvdmlkZXJcIjtcbmltcG9ydCB7IHVwcGVyY2FtZWxjYXNlIH0gZnJvbSBcIi4vdXRpbHNcIjtcblxuQENvbXBvbmVudCh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpjb21wb25lbnQtc2VsZWN0b3JcbiAgc2VsZWN0b3I6IFwiYnQtaWNvbiwgYm9vdHN0cmFwLWljb24sIGJpXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vbmctYm9vdHN0cmFwLWljb25zLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlVXJsczogW1wiLi9uZy1ib290c3RyYXAtaWNvbnMuY29tcG9uZW50LnNjc3NcIl0sXG59KVxuZXhwb3J0IGNsYXNzIEJvb3RzdHJhcEljb25zIGltcGxlbWVudHMgT25DaGFuZ2VzIHtcbiAgQElucHV0KCkgbmFtZSE6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGVsZW06IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSBjaGFuZ2VEZXRlY3RvcjogQ2hhbmdlRGV0ZWN0b3JSZWYsXG4gICAgQEluamVjdChJY29ucykgcHJpdmF0ZSBpY29uczogSWNvbnNcbiAgKSB7fVxuXG4gIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICAvLyBpY29ucyBhcmUgcHJvdmlkZWQgYXMgYW4gYXJyYXkgb2Ygb2JqZWN0cyBiZWNhdXNlIG9mIFwibXVsdGk6IHRydWVcIlxuICAgIGNvbnN0IGljb25zID0gT2JqZWN0LmFzc2lnbih7fSwgLi4uKHRoaXMuaWNvbnMgYXMgYW55IGFzIG9iamVjdFtdKSk7XG4gICAgY29uc3Qgc3ZnID0gaWNvbnNbdXBwZXJjYW1lbGNhc2UoY2hhbmdlcy5uYW1lLmN1cnJlbnRWYWx1ZSldIHx8IFwiXCI7XG5cbiAgICBpZiAoIXN2Zykge1xuICAgICAgY29uc29sZS53YXJuKFxuICAgICAgICBgSWNvbiBub3QgZm91bmQ6ICR7Y2hhbmdlcy5uYW1lLmN1cnJlbnRWYWx1ZX1cXG5gICtcbiAgICAgICAgICBgUmVmZXIgdG8gZG9jdW1lbnRhdGlvbiBvbiBodHRwczovL2dpdGh1Yi5jb20vYml1dGFzL25nLWJvb3RzdHJhcC1pY29ucy9pc3N1ZXNgXG4gICAgICApO1xuICAgIH1cblxuICAgIHRoaXMuZWxlbS5uYXRpdmVFbGVtZW50LmlubmVySFRNTCA9IHN2ZztcbiAgICB0aGlzLmNoYW5nZURldGVjdG9yLm1hcmtGb3JDaGVjaygpO1xuICB9XG59XG4iLCI8bmctY29udGVudD48L25nLWNvbnRlbnQ+XG4iXX0=